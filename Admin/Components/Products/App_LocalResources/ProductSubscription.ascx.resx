<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="lcBillCylcleTitle.Text" xml:space="preserve">
    <value>Bill Cycle</value>
  </data>
  <data name="lcCategory.Text" xml:space="preserve">
    <value>Category</value>
  </data>
  <data name="lcCustomerCanCancel.Text" xml:space="preserve">
    <value>Customer Can Cancel</value>
  </data>
  <data name="lcDiscountGroupID.Text" xml:space="preserve">
    <value>Discount Group</value>
  </data>
  <data name="lcDownloadable.Text" xml:space="preserve">
    <value>Is Downloadable?</value>
  </data>
  <data name="lcDownloadPath.Text" xml:space="preserve">
    <value>File Download URL</value>
  </data>
  <data name="lcExpirationType.Text" xml:space="preserve">
    <value>Expiration Type</value>
  </data>
  <data name="lcFieldMutipleLanguage.Text" xml:space="preserve">
    <value>Able to display in multiple languages </value>
  </data>
  <data name="lcFixed.Text" xml:space="preserve">
    <value>Override Shipping Costs (per item)?</value>
  </data>
  <data name="lcFixedDateExpire.Text" xml:space="preserve">
    <value>Expire on fixed date</value>
  </data>
  <data name="lcFixedPrice.Text" xml:space="preserve">
    <value>Gift Certificate Value</value>
  </data>
  <data name="lcGiftAmount.Text" xml:space="preserve">
    <value>Gift Amount</value>
  </data>
  <data name="lcGiftCertificate.Text" xml:space="preserve">
    <value>ls Gift Certificate?</value>
  </data>
  <data name="lcGiftCertificateHeader.Text" xml:space="preserve">
    <value>Gift Certificate</value>
  </data>
  <data name="lcImage.Text" xml:space="preserve">
    <value>Images</value>
  </data>
  <data name="lcIncludeVat.Text" xml:space="preserve">
    <value>All pricing includes tax</value>
  </data>
  <data name="lcIntervalLabel.Text" xml:space="preserve">
    <value>Recurring Payment Interval</value>
  </data>
  <data name="lcIntervalNumberCycle.Text" xml:space="preserve">
    <value>Number of Recurring Cycles</value>
  </data>
  <data name="lcIsElectronic.Text" xml:space="preserve">
    <value>Electronic Only</value>
  </data>
  <data name="lcIsEnabled.Text" xml:space="preserve">
    <value>Enabled</value>
  </data>
  <data name="lcIsRecuringLabel.Text" xml:space="preserve">
    <value>Is Recurring</value>
  </data>
  <data name="lcIsTaxable.Text" xml:space="preserve">
    <value>Is Taxable</value>
  </data>
  <data name="lcIsTodaySpecial.Text" xml:space="preserve">
    <value>Today Special</value>
  </data>
  <data name="lcKeywords.Text" xml:space="preserve">
    <value>Keywords</value>
  </data>
  <data name="lcLanguageHeader.Text" xml:space="preserve">
    <value>Language-Dependent Fields</value>
  </data>
  <data name="lcLastAddProduct.Text" xml:space="preserve">
    <value>View Last Added Product&lt;br/&gt;</value>
  </data>
  <data name="lcLongDescription.Text" xml:space="preserve">
    <value>Long Description</value>
  </data>
  <data name="lcManufacturer.Text" xml:space="preserve">
    <value>Manufacturer</value>
  </data>
  <data name="lcManufacturerPartNumber.Text" xml:space="preserve">
    <value>Manufacturer Part Number</value>
  </data>
  <data name="lcMetaDescription.Text" xml:space="preserve">
    <value>Meta Description</value>
  </data>
  <data name="lcMetaDescriptionComment.Text" xml:space="preserve">
    <value>&lt;br/&gt;(If left blank, the system will use product short description.)</value>
  </data>
  <data name="lcMetaKeyword.Text" xml:space="preserve">
    <value>Meta Keyword</value>
  </data>
  <data name="lcMetaKeywordComment.Text" xml:space="preserve">
    <value>&lt;br/&gt;(If left blank, the system will use product name.)</value>
  </data>
  <data name="lcModel.Text" xml:space="preserve">
    <value>Model</value>
  </data>
  <data name="lcMultipleImageRadio.Text" xml:space="preserve">
    <value>Multiple Images</value>
  </data>
  <data name="lcName.Text" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="lcNoExpiration.Text" xml:space="preserve">
    <value>No Expiration</value>
  </data>
  <data name="lcOptionalImage.Text" xml:space="preserve">
    <value>Secondary Image</value>
  </data>
  <data name="lcOtherFive.Text" xml:space="preserve">
    <value>Other 5</value>
  </data>
  <data name="lcOtherFour.Text" xml:space="preserve">
    <value>Other 4</value>
  </data>
  <data name="lcOtherOne.Text" xml:space="preserve">
    <value>Other 1</value>
  </data>
  <data name="lcOtherThree.Text" xml:space="preserve">
    <value>Other 3</value>
  </data>
  <data name="lcOtherTwo.Text" xml:space="preserve">
    <value>Other 2</value>
  </data>
  <data name="lcOverrideProductLayoutLabel.Text" xml:space="preserve">
    <value>Override Product Details Layout</value>
  </data>
  <data name="lcPrice.Text" xml:space="preserve">
    <value>Price</value>
  </data>
  <data name="lcPrimaryImage.Text" xml:space="preserve">
    <value>Primary Image</value>
  </data>
  <data name="lcPrimaryLink.Text" xml:space="preserve">
    <value>View Primary Image</value>
  </data>
  <data name="lcProductAttribute.Text" xml:space="preserve">
    <value>Product Attribute</value>
  </data>
  <data name="lcProductDetailsLayoutPathLabel.Text" xml:space="preserve">
    <value>Product details format</value>
  </data>
  <data name="lcProductID.Text" xml:space="preserve">
    <value>Product ID</value>
  </data>
  <data name="lcProductImageList.Text" xml:space="preserve">
    <value>Product Image Lists</value>
  </data>
  <data name="lcProductOptionLabel.Text" xml:space="preserve">
    <value>Product Options</value>
  </data>
  <data name="lcProductRating.Text" xml:space="preserve">
    <value>Product Rating</value>
  </data>
  <data name="lcRecurringHeader.Text" xml:space="preserve">
    <value>Recurring</value>
  </data>
  <data name="lcRecurringNoticeLabel.Text" xml:space="preserve">
    <value>The duration of the subscription as defined by the payment schedule and total occurrences may not exceed three years.</value>
  </data>
  <data name="lcRecurringRequireShippingAddressLabel.Text" xml:space="preserve">
    <value>Recurring Require ShippingAddress</value>
  </data>
  <data name="lcRelatedProducts.Text" xml:space="preserve">
    <value>Related Products</value>
  </data>
  <data name="lcRequiredFieldSymbol.Text" xml:space="preserve">
    <value>Required fields</value>
  </data>
  <data name="lcRetailPrice.Text" xml:space="preserve">
    <value>Retail Price</value>
  </data>
  <data name="lcRollingDate.Text" xml:space="preserve">
    <value>Expire after number of days</value>
  </data>
  <data name="lcSaveAndViewImageLinkButton.Text" xml:space="preserve">
    <value>Save Setting and View Images</value>
  </data>
  <data name="lcShippingCost.Text" xml:space="preserve">
    <value>Shipping Cost</value>
  </data>
  <data name="lcShortDescription.Text" xml:space="preserve">
    <value>Short Description</value>
  </data>
  <data name="lcSingleImageRadio.Text" xml:space="preserve">
    <value>Single Image</value>
  </data>
  <data name="lcSku.Text" xml:space="preserve">
    <value>Sku:</value>
  </data>
  <data name="lcStock.Text" xml:space="preserve">
    <value>Stock</value>
  </data>
  <data name="lcTrialAmountLabel.Text" xml:space="preserve">
    <value>Trial Period Amount Per Cycle</value>
  </data>
  <data name="lcTrialIntervalLabel.Text" xml:space="preserve">
    <value>Trial Interval</value>
  </data>
  <data name="lcTrialNumberCycle.Text" xml:space="preserve">
    <value>Number of Trial Cycles</value>
  </data>
  <data name="lcTrialTitle.Text" xml:space="preserve">
    <value>Trial Cycle</value>
  </data>
  <data name="lcUPC.Text" xml:space="preserve">
    <value>UPC</value>
  </data>
  <data name="lcUseInventory.Text" xml:space="preserve">
    <value>Use Inventory Control</value>
  </data>
  <data name="lcWeight.Text" xml:space="preserve">
    <value>Weight</value>
  </data>
  <data name="lcWholesalePrice.Text" xml:space="preserve">
    <value>Wholesale Price 1</value>
  </data>
  <data name="lcWholesalePrice2.Text" xml:space="preserve">
    <value>Wholesale Price 2</value>
  </data>
  <data name="lcWholesalePrice3.Text" xml:space="preserve">
    <value>Wholesale Price 3</value>
  </data>
  <data name="uxAddButton.Text" xml:space="preserve">
    <value>Add Product</value>
  </data>
  <data name="uxAddMoreImageButton.Text" xml:space="preserve">
    <value>Add More Image</value>
  </data>
  <data name="uxAddPrimaryImageButton.Text" xml:space="preserve">
    <value>Add Primary Image</value>
  </data>
  <data name="uxCopyButton.Text" xml:space="preserve">
    <value>Copy Product</value>
  </data>
  <data name="uxDeleteButton" xml:space="preserve">
    <value>Bill Cycle</value>
  </data>
  <data name="uxDeleteButton.Text" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="uxEditButton.Text" xml:space="preserve">
    <value>Update Product</value>
  </data>
  <data name="uxFixedDateCompareValidator.ErrorMessage" xml:space="preserve">
    <value>Expiration date is not valid.</value>
  </data>
  <data name="uxFixedDateRequiredValidator.ErrorMessage" xml:space="preserve">
    <value>Expiration date is required.</value>
  </data>
  <data name="uxIsTaxable.Text" xml:space="preserve">
    <value>Is Taxable</value>
  </data>
  <data name="uxNameRequiredValidator.ErrorMessage" xml:space="preserve">
    <value>Product name is required.</value>
  </data>
  <data name="uxPriceRequiredValidator.ErrorMessage" xml:space="preserve">
    <value>Price is required.</value>
  </data>
  <data name="uxRegularRelatedProductsValidator.ErrorMessage" xml:space="preserve">
    <value>Related products must be numbers seperated by commas (,)</value>
  </data>
  <data name="uxRetailPriceRequiredValidator.ErrorMessage" xml:space="preserve">
    <value>Retail price is required.</value>
  </data>
  <data name="uxReviewLink.Text" xml:space="preserve">
    <value>Product Review List</value>
  </data>
  <data name="uxSkuRequiredValidator.ErrorMessage" xml:space="preserve">
    <value>SKU is required.</value>
  </data>
  <data name="uxStockOptionRequiredValidator.ErrorMessage" xml:space="preserve">
    <value>Stock is required.</value>
  </data>
  <data name="uxStockRequiredValidator.ErrorMessage" xml:space="preserve">
    <value>Stock is required.</value>
  </data>
  <data name="uxTaxClass.Text" xml:space="preserve">
    <value>Tax Class</value>
  </data>
  <data name="uxValidationSummary.HeaderText" xml:space="preserve">
    <value>&lt;div class="Title"&gt;Please correct the following errors :&lt;/div&gt;</value>
  </data>
  <data name="uxUseDefaultPriceLabel.Text" xml:space="preserve">
    <value>Use Default Value</value>
  </data>
  <data name="uxUseDefaultRetailLabel.Text" xml:space="preserve">
    <value>Use Default Value</value>
  </data>
  <data name="uxUseDefaultWholesale2Label.Text" xml:space="preserve">
    <value>Use Default Value</value>
  </data>
  <data name="uxUseDefaultWholesale3Label.Text" xml:space="preserve">
    <value>Use Default Value</value>
  </data>
  <data name="uxUseDefaultWholesaleLabel.Text" xml:space="preserve">
    <value>Use Default Value</value>
  </data>
  <data name="lcIsAffiliate.Text" xml:space="preserve">
    <value>Can Generate Affiliate Link?</value>
  </data>
  <data name="lcIsFreeShippingCost.Text" xml:space="preserve">
    <value>Free Shipping Cost</value>
  </data>
  <data name="lcMaximumQuantity.Text" xml:space="preserve">
    <value>Maximum Quantity</value>
  </data>
  <data name="lcMinimumQuantity.Text" xml:space="preserve">
    <value>Minimum Quantity</value>
  </data>
  <data name="uxMaximumQuantityValidator.ErrorMessage" xml:space="preserve">
    <value>The value must be integer and greater than minimum quantity or equal 0 for unlimited</value>
  </data>
  <data name="uxMinimumQuantityValidator.ErrorMessage" xml:space="preserve">
    <value>The value must be integer and greater than 1</value>
  </data>
  <data name="lcMaximumQuantityLimit.Text" xml:space="preserve">
    <value>(0 is unlimited)</value>
  </data>
  <data name="lcDefaultPrice.Text" xml:space="preserve">
    <value>Default Price</value>
  </data>
  <data name="lcMinimumPrice.Text" xml:space="preserve">
    <value>Minimum Price</value>
  </data>
  <data name="lcUseCustomPrice.Text" xml:space="preserve">
    <value>Use Custom Price</value>
  </data>
  <data name="lcIsCallForPrice.Text" xml:space="preserve">
    <value>Is Call For Price</value>
  </data>
  <data name="uxBrandLabel.Text" xml:space="preserve">
    <value>Brand</value>
  </data>
  <data name="lcIsSubscription.Text" xml:space="preserve">
    <value>Is Subscription  Product</value>
  </data>
  <data name="lcSubscriptionLevel.Text" xml:space="preserve">
    <value>Subscriptin Level</value>
  </data>
  <data name="lcSubscriptionRange.Text" xml:space="preserve">
    <value>Range (day)</value>
  </data>
  <data name="lcProductSubscriptionHeader.Text" xml:space="preserve">
    <value>Product Subscription</value>
  </data>
</root>